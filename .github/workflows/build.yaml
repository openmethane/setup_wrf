name: build_docker

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE: ghcr.io/superpower-institute/setup_wrf

jobs:
  build:
    runs-on: ubuntu-latest

    # Builds, tests and pushes the container
    # This is performed via a single GH job because sharing images between jobs is somewhat clumsy.

    steps:
      # Build the docker container
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image
        uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          tags: setup_wrf:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
          load: true

      # Test the built image before pushing
      - name: Cache Geog data
        id: cache-geog
        uses: actions/cache@v4
        with:
          path: data/geog
          key: geog-data-${{ hashFiles('scripts/download-geog.sh') }}
      - name: Download and extract geography data
        if: steps.cache-geog.outputs.cache-hit != 'true'
        run: |
          ./scripts/download-geog.sh --low-res
      - name: Run test
        run: |
          # Update the namelist.wps file to use the low resolution data
          sed -i "s/geog_data_res.*/geog_data_res = 'usgs_10m+lowres',/g" templates/aust-test/namelist.wps
          # Run setup_for_wrf.py
          docker run --rm \
            -v ${{ github.workspace }}:/project \
            -v ${{ github.workspace }}/data/geog/WPS_GEOG:/opt/wrf/geog \
            setup_wrf \
            python setup_for_wrf.py -c config.docker.json
          # Run WRF
          docker run --rm \
            -v ${{ github.workspace }}:/project \
            -v ${{ github.workspace }}/data/geog/WPS_GEOG:/opt/wrf/geog \
            setup_wrf \
            data/runs/aust-test/main.sh
      # The WRF directory contains filenames with : in them, which are not supported by upload-artifact
      - name: Zip WRF artifacts
        if: ${{ always() }}
        run: |
          tar -cvzf results.tar.gz data/runs
      - name: Upload WRF artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: ${{ github.workspace }}/results.tar.gz

      # Push image to container registry
      - name: Login to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "${{ env.IMAGE }}"
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
# TODO: Investigate how to push to the container registry
#      - name: Build and push image
#        uses: docker/build-push-action@v5
#        id: build-final
#        with:
#          context: .
#          labels: ${{ steps.meta.outputs.labels }}
#          tags: ${{ steps.meta.outputs.tags }}
#          push: true